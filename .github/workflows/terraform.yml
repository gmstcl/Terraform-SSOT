# name: "Terraform"

# on:
#   push:
#     branches:
#       - main

# permissions:
#   id-token: write   # This is required for requesting the JWT
#   contents: read 

# jobs:
#   terraform:
#     defaults:
#       run:
#         shell: bash

#     name: "Terraform"
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

        
#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v1
#         # with:
#         #   terraform_version: 1.1.7
#           # terraform_wrapper: true
#           # cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ap-northeast-2

#       - name: Terraform Init
#         id: init
#         run: terraform init

#       - name: Terraform Plan
#         id: plan
#         # if: github.event_name == 'pull_request'
#         run: terraform plan -input=false
#         continue-on-error: true
      
#       - name: test
#         run: ls

#       - name: Terraform Apply
#         run: terraform apply -auto-approve -input=false

name: 'Terraform'

on:
  push:
    branches: [ "main" ]
  schedule:
    - cron: "*/5 * * * *"

env:
  AWS_REGION: ap-northeast-2

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Terraform
      id: terraform-setup
      uses: hashicorp/setup-terraform@v1

    # AWS 리소스를 이용하기 위해서 추가
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply
      run: terraform destroy -auto-approve -input=false